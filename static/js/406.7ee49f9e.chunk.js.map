{"version":3,"file":"static/js/406.7ee49f9e.chunk.js","mappings":"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","sources":["components/api-service/api.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f896ccabafb5d2939071b9f1aa9e42c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getFilmDetails = async movieId => {\n  const responce = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return responce;\n};\n\nexport const searchFilm = async name => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const castCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response;\n};\n\nexport const Reviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n","import styled from '@emotion/styled';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesLists = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  justify-content: space-between;\n  margin: 0;\n  margin-top: 30px;\n  padding: 0;\n`;\n\nexport const MoviesListsItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const MoviesListsItemLink = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  color: #030303;\n  text-decoration: underline;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesLists,\n  MoviesListsItem,\n  MoviesListsItemLink,\n} from './SearchMovie.styled';\nimport DefaultImg from 'components/default.jpg';\n\nconst SearchMovie = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesLists>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <MoviesListsItem key={id}>\n            <MoviesListsItemLink to={`${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path !== null\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : DefaultImg\n                }\n                alt={title}\n                width=\"300\"\n                height=\"400\"\n              />\n              {title}\n            </MoviesListsItemLink>\n          </MoviesListsItem>\n        );\n      })}\n    </MoviesLists>\n  );\n};\n\nexport default SearchMovie;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 30px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 8px;\n  font-size: 14px;\n  border-radius: 10px;\n  border: 1px solid #030303;\n  margin-right: 10px;\n`;\n\nexport const FormBtn = styled.button`\n  padding: 8px;\n  border-radius: 10px;\n  border: 1px solid #030303;\n  background-color: #030303;\n  color: #fff;\n`;\n","import { FormInput, FormBtn, Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormInput type=\"text\" name=\"searchName\" />\n      <FormBtn type=\"submit\">Search</FormBtn>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useSearchParams } from 'react-router-dom';\nimport * as SearchFilmByName from 'components/api-service/api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport SearchMovie from 'components/SearchMovie';\nimport SearchForm from 'components/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [films, setFilms] = useSearchParams();\n  const nameFilm = films.get('name') || '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setMovies([]);\n    setError(null);\n    const form = e.target;\n    const searchQuery = form.searchName.value;\n    if (searchQuery === '') {\n      alert('Введіть текст у пошук!');\n      return;\n    }\n    setFilms({ name: searchQuery });\n  };\n\n  useEffect(() => {\n    if (nameFilm === '') {\n      return;\n    }\n    SearchFilmByName.searchFilm(nameFilm)\n      .then(data => {\n        if (!data.results.length) {\n          throw new Error();\n        }\n        setMovies(data.results);\n      })\n      .catch(error => {\n        setError({ error });\n      });\n  }, [nameFilm]);\n\n  return (\n    <>\n      <h2>Search film</h2>\n      {error && <p>Щось пішло не так. Оновіть сторінку.</p>}\n      <SearchForm onSubmit={handleSubmit} />\n      {movies && <SearchMovie movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrending","data","results","getFilmDetails","movieId","responce","searchFilm","name","castCredits","response","Reviews","MoviesLists","styled","MoviesListsItem","MoviesListsItemLink","NavLink","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","DefaultImg","alt","width","height","Form","FormInput","FormBtn","onSubmit","type","useState","setMovies","error","setError","useSearchParams","films","setFilms","nameFilm","get","useEffect","SearchFilmByName","then","length","Error","catch","e","preventDefault","searchQuery","target","searchName","value","alert"],"sourceRoot":""}